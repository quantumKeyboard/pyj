# Program to demonstrate constructor overloading in Python

class Calculator:
    def __init__(self, *args):
        # Constructor that can handle different numbers of arguments
        self.numbers = args
        self.result = 0
        
        # Different behaviors based on number of arguments
        if len(args) == 0:
            print("No arguments provided. Calculator initialized with default values.")
        elif len(args) == 1:
            print(f"One argument provided: {args[0]}")
            self.result = args[0]
        elif len(args) == 2:
            print(f"Two arguments provided: {args[0]} and {args[1]}")
            self.result = args[0] + args[1]
        else:
            print(f"{len(args)} arguments provided: {args}")
            self.result = sum(args)
    
    def get_result(self):
        return self.result

# Test with different numbers of arguments
calc1 = Calculator()
calc2 = Calculator(5)
calc3 = Calculator(10, 20)
calc4 = Calculator(1, 2, 3, 4, 5)

# Display results
print("Result for calc1:", calc1.get_result())
print("Result for calc2:", calc2.get_result())
print("Result for calc3:", calc3.get_result())
print("Result for calc4:", calc4.get_result())